SELECT	CMPANYID, CMPNYNAM, INTERID
FROM	DYNAMICS.dbo.SY01500

SELECT	* 
FROM	ATEST.dbo.SY00100

/*
UPDATE ptsc.dbo.SY00100 SET CMPANYID = 40
UPDATE FIDMO.dbo.SY00100 SET CMPANYID = 25
UPDATE GSA.dbo.SY00100 SET CMPANYID = 32
UPDATE IGSC.dbo.SY00100 SET CMPANYID = 33
UPDATE OIS.dbo.SY00100 SET CMPANYID = 34
UPDATE GIS.dbo.SY00100 SET CMPANYID = 21
UPDATE his01.dbo.SY00100 SET CMPANYID = 51
UPDATE HIS52.dbo.SY00100 SET CMPANYID = 61
*/
--IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SY00100') 
--BEGIN
--	DECLARE	@Statement Varchar(850)
--	SELECT	@Statement = 'DECLARE @cStatement Varchar(255)
--	DECLARE G_cursor CURSOR FOR
--	SELECT	CASE WHEN UPPER(a.COLUMN_NAME) IN (''COMPANYID'',''CMPANYID'') THEN ''UPDATE '' + a.TABLE_NAME + '' SET '' + a.COLUMN_NAME + '' = '' + CAST(b.CMPANYID AS Char(3)) 
--			ELSE ''UPDARE '' + a.TABLE_NAME + '' SET '' + a.COLUMN_NAME + '' = '''''' + DB_Name() + '''''''' END
--	FROM	INFORMATION_SCHEMA.COLUMNS a, ' + RTRIM(DBNAME) + '.dbo.SY01500 b
--	WHERE	UPPER(a.COLUMN_NAME) IN (''COMPANYID'',''CMPANYID'',''INTERID'',''DB_NAME'',''DBNAME'')
--			AND b.INTERID = DB_Name() 
--			AND COLUMN_DEFAULT IS NOT Null
--			AND RTRIM(a.TABLE_NAME) + ''-'' + RTRIM(a.COLUMN_NAME) <> ''SY00100-DBNAME''
--	ORDER BY a.TABLE_NAME

--	SET NOCOUNT ON

--	OPEN G_cursor

--	FETCH NEXT FROM G_cursor INTO @cStatement

--	WHILE (@@FETCH_STATUS <> -1)
--	BEGIN
--		EXECUTE(@cStatement)
--		FETCH NEXT FROM G_cursor INTO @cStatement
--	END

--	CLOSE G_cursor
--	DEALLOCATE G_cursor

--	SET NOCOUNT OFF'
--	FROM SY00100

--	EXECUTE (@Statement)
--END
--ELSE
--BEGIN
--	DECLARE	@cStatement Varchar(255)
--	DECLARE	G_cursor CURSOR FOR
--	SELECT	CASE WHEN UPPER(a.COLUMN_NAME) IN ('COMPANYID','CMPANYID')
--			THEN 'update ' + a.TABLE_NAME + ' set ' + a.COLUMN_NAME + ' = ' + CAST(b.CMPANYID AS Char(3)) 
--			ELSE 'update ' + a.TABLE_NAME + ' set ' + a.COLUMN_NAME + ' = ''' + DB_Name() + '''' END
--	FROM	INFORMATION_SCHEMA.COLUMNS a, DYNAMICS.dbo.SY01500 b
--    WHERE	UPPER(a.COLUMN_NAME) IN ('COMPANYID','CMPANYID','INTERID','DB_NAME','DBNAME')
--			AND b.INTERID = DB_Name() 
--			AND COLUMN_DEFAULT IS NOT Null
--    ORDER BY a.TABLE_NAME

--	SET NOCOUNT ON

--	OPEN G_cursor

--	FETCH NEXT FROM G_cursor INTO @cStatement

--	WHILE (@@FETCH_STATUS <> -1)
--	BEGIN
--		EXECUTE(@cStatement)
--		FETCH NEXT FROM G_cursor INTO @cStatement
--	END

--	CLOSE G_cursor
--	DEALLOCATE G_cursor

--	SET NOCOUNT OFF
--END