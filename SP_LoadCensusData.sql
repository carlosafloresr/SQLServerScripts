CREATE PROCEDURE SP_LoadCensusData 
	@USERID 		CHAR(15), 
	@EMPOPT 		SMALLINT, 
	@Start_Chk_Dt 		varchar(30), 
	@End_Chk_Dt 		varchar(30),
	@Start_Dept 		Varchar(15), 
	@End_Dept 		Varchar(15), 
	@StartBeneCode 		VARCHAR(7), 
	@EndBeneCode 		VARCHAR(7),
	@StartDednCode 		VARCHAR(7), 
	@EndDednCode 		VARCHAR(7), 
	@SortString 		Varchar(3), 
	@BenActDate 		Varchar(30)
AS
BEGIN
	DECLARE @EMPLOYID 		VARCHAR(15), 
		@DEPTDESC 		VARCHAR(31),
		@DEPRTMNT 		VARCHAR(15),
		@LASTNAME 		VARCHAR(21),
		@FNAMEMI 		VARCHAR(30),
		@SOCSCNUM 		VARCHAR(15),
		@HIREDATE 		DATETIME,
		@GROSSPAY 		NUMERIC (19,5),
		@GENDER 		SMALLINT,
		@CITY 			VARCHAR(50),
		@STATE 			VARCHAR(50),
		@LASTDAYWORKED_I 	DATETIME,
		@BIRTHDATE  		DATETIME,
		@MARITALSTATUS 		SMALLINT,
		@INACTIVE 		SMALLINT,
		@EMPLYTYPE 		SMALLINT,
		@WC_CODE 		VARCHAR(10),
		@WC_RATE 		NUMERIC(19,5),
		@WC_COST 		NUMERIC(19,5),
		@JOBDESC 		VARCHAR(50),
		@PAYCODE 		VARCHAR(7),
		@PAYRATE 		NUMERIC(19,5),
		@FLSASTATUS 		SMALLINT,
		@BENECODE 		VARCHAR(7),
		@BENEPERC 		NUMERIC(19,5),
		@BENEAMNT 		NUMERIC(19,5),
		@DEDNCODE 		VARCHAR(7),
		@DEDNPERC 		NUMERIC(19,5),
		@DEDNAMNT 		NUMERIC(19,5),
		@BEN_ACTIVATION_DATE 	DATETIME,
		@BEN_TERM_DATE 		DATETIME,
		@DEDN_ACTIVATION_DATE 	DATETIME,
		@DEDN_TERM_DATE 	DATETIME,
		@REPID 			VARCHAR(10),
		@SQLSTR 		VARCHAR(5000),
		@INSERTED 		SMALLINT,
		@BEN_WT_PERIOD 		INTEGER,
		@BEN_CURR_DT 		DATETIME,
		@INSERT_FLAG 		SMALLINT,
		@BEN_END_DT 		DATETIME,
		@SETROWNUMBER		INT
	
	SET @USERID		= RTRIM(@USERID)
	SET @REPID 		= 'CENSUS'
	SET @SETROWNUMBER	= 0

	DELETE IMC_CENSUSREP WHERE USERID = @USERID
	
	IF @EMPOPT = 1 
	BEGIN
		IF @Start_Dept <> 'ALL'
		BEGIN
			DECLARE EMPDATA CURSOR LOCAL KEYSET OPTIMISTIC FOR 
			SELECT 	LASTNAME, 
				RTRIM(FRSTNAME) + ' ' + RTRIM(MIDLNAME), 
				SOCSCNUM, 
				EMPMST.EMPLOYID, 
				GENDER, 
				CITY, 
				STATE, 
				STRTDATE, 
				DEMPINAC AS LASTDAYWORKED_I, 
				BRTHDATE, 
				MARITALSTATUS, 
				INACTIVE, 
				EMPLOYMENTTYPE, 
				EMPMST.WRKRCOMP, 
				JOBTTLMST.DSCRIPTN AS JOBTITLE, 
				DEPTMST.DSCRIPTN AS DEPT, 
				FLSASTATUS, 
				EMPMST.DEPRTMNT, 
				CASE ISNUMERIC(EMPMST.USERDEF2) WHEN 1 THEN EMPMST.USERDEF2 ELSE 0 END
			FROM 	UPR00100 EMPMST 
				INNER JOIN UPR00102 EMPADDRMST ON EMPMST.EMPLOYID = EMPADDRMST.EMPLOYID AND EMPMST.ADRSCODE = EMPADDRMST.ADRSCODE 
			    	INNER JOIN UPR40301 JOBTTLMST ON JOBTTLMST.JOBTITLE = EMPMST.JOBTITLE 
			    	INNER JOIN UPR40300 DEPTMST ON DEPTMST.DEPRTMNT = EMPMST.DEPRTMNT 
			WHERE 	INACTIVE = 0 AND
			    	EMPMST.DEPRTMNT BETWEEN @Start_Dept AND @End_Dept
		END
		ELSE
		BEGIN
			DECLARE EMPDATA CURSOR LOCAL KEYSET OPTIMISTIC FOR 
			SELECT 	LASTNAME, 
				RTRIM(FRSTNAME) + ' ' + RTRIM(MIDLNAME), 
				SOCSCNUM, 
			    	EMPMST.EMPLOYID, 
				GENDER, 
				CITY, 
				STATE, 
				STRTDATE, 
				DEMPINAC AS LASTDAYWORKED_I, 
				BRTHDATE, 
				MARITALSTATUS, 
				INACTIVE, 
				EMPLOYMENTTYPE, 
			    	EMPMST.WRKRCOMP, 
				JOBTTLMST.DSCRIPTN AS JOBTITLE, 
				DEPTMST.DSCRIPTN AS DEPT, 
				FLSASTATUS, 
				EMPMST.DEPRTMNT, 
				CASE ISNUMERIC(EMPMST.USERDEF2) WHEN 1 THEN EMPMST.USERDEF2 ELSE 0 END
			FROM 	UPR00100 EMPMST 
				INNER JOIN UPR00102 EMPADDRMST ON EMPMST.EMPLOYID = EMPADDRMST.EMPLOYID AND EMPMST.ADRSCODE = EMPADDRMST.ADRSCODE 
			    	INNER JOIN UPR40301 JOBTTLMST ON JOBTTLMST.JOBTITLE = EMPMST.JOBTITLE 
			    	INNER JOIN UPR40300 DEPTMST ON DEPTMST.DEPRTMNT = EMPMST.DEPRTMNT
			WHERE 	INACTIVE = 0 
		END
	END
	ELSE 
	BEGIN
	    	IF @Start_Dept <> 'ALL'
		BEGIN
	    		DECLARE EMPDATA CURSOR LOCAL KEYSET OPTIMISTIC FOR 
			SELECT 	LASTNAME, 
				RTRIM(FRSTNAME) + ' ' + RTRIM(MIDLNAME), 
				SOCSCNUM, 
			    	EMPMST.EMPLOYID, 
				GENDER, 
				CITY, 
				STATE, 
				STRTDATE, 
				DEMPINAC AS LASTDAYWORKED_I, 
				BRTHDATE, 
				MARITALSTATUS, 
				INACTIVE, 
				EMPLOYMENTTYPE, 
			    	EMPMST.WRKRCOMP, 
				JOBTTLMST.DSCRIPTN AS JOBTITLE, 
				DEPTMST.DSCRIPTN AS DEPT, 
				FLSASTATUS, 
				EMPMST.DEPRTMNT, 
				CASE ISNUMERIC(EMPMST.USERDEF2) WHEN 1 THEN EMPMST.USERDEF2 ELSE 0 END
			FROM 	UPR00100 EMPMST 
				INNER JOIN UPR00102 EMPADDRMST ON EMPMST.EMPLOYID = EMPADDRMST.EMPLOYID AND EMPMST.ADRSCODE = EMPADDRMST.ADRSCODE 
			    	INNER JOIN UPR40301 JOBTTLMST ON JOBTTLMST.JOBTITLE = EMPMST.JOBTITLE 
			    	INNER JOIN UPR40300 DEPTMST ON DEPTMST.DEPRTMNT = EMPMST.DEPRTMNT
			WHERE	EMPMST.DEPRTMNT BETWEEN @Start_Dept AND @End_Dept
		END
		ELSE
		BEGIN
	    		DECLARE EMPDATA CURSOR LOCAL KEYSET OPTIMISTIC FOR 
			SELECT 	LASTNAME, 
				RTRIM(FRSTNAME) + ' ' + RTRIM(MIDLNAME), 
				SOCSCNUM, 
			    	EMPMST.EMPLOYID, 
				GENDER, 
				CITY, 
				STATE, 
				STRTDATE, 
				DEMPINAC AS LASTDAYWORKED_I, 
				BRTHDATE, 
				MARITALSTATUS, 
				INACTIVE, 
				EMPLOYMENTTYPE, 
			    	EMPMST.WRKRCOMP, 
				JOBTTLMST.DSCRIPTN AS JOBTITLE, 
				DEPTMST.DSCRIPTN AS DEPT, 
				FLSASTATUS, 
				EMPMST.DEPRTMNT, 
				CASE ISNUMERIC(EMPMST.USERDEF2) WHEN 1 THEN EMPMST.USERDEF2 ELSE 0 END
			FROM 	UPR00100 EMPMST 
				INNER JOIN UPR00102 EMPADDRMST ON EMPMST.EMPLOYID = EMPADDRMST.EMPLOYID AND EMPMST.ADRSCODE = EMPADDRMST.ADRSCODE 
			    	INNER JOIN UPR40301 JOBTTLMST ON JOBTTLMST.JOBTITLE = EMPMST.JOBTITLE 
			    	INNER JOIN UPR40300 DEPTMST ON DEPTMST.DEPRTMNT = EMPMST.DEPRTMNT

		END
	END
	
	OPEN EMPDATA
	FETCH FROM EMPDATA 
	INTO 	@LASTNAME, @FNAMEMI, @SOCSCNUM, @EMPLOYID, @GENDER, @CITY, @STATE, @HIREDATE, @LASTDAYWORKED_I, @BIRTHDATE, 
		@MARITALSTATUS, @INACTIVE, @EMPLYTYPE, @WC_CODE, @JOBDESC, @DEPTDESC, @FLSASTATUS, @DEPRTMNT, @BEN_WT_PERIOD  
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @DEPTDESC = @DEPRTMNT 
		SET @INSERT_FLAG = 0 	

	     	IF @BenActDate <> 'NONE' 
	      	BEGIN
			SET @BEN_WT_PERIOD = ISNULL(@BEN_WT_PERIOD, 0)

			IF @BEN_WT_PERIOD = 0
				SET @BEN_WT_PERIOD = 90
	
			SET @BEN_CURR_DT = DATEADD(day, @BEN_WT_PERIOD, @HIREDATE)

			IF DAY(@BEN_CURR_DT) <> 1
				SET @BEN_CURR_DT = dbo.EndOfMonth(day(@BEN_CURR_DT),month(@BEN_CURR_DT),year(@BEN_CURR_DT))
	
			SET @BEN_CURR_DT = DATEADD(day, 1, @HIREDATE)	

			IF @BEN_CURR_DT <= CAST(@BenActDate AS DATETIME) 
		 	BEGIN
		  		IF @LASTDAYWORKED_I <> CAST('1-JAN-1900' AS DATETIME)
		   		BEGIN
					SET @BEN_END_DT = dbo.EndOfMonth(day(@LASTDAYWORKED_I),month(@LASTDAYWORKED_I),year(@LASTDAYWORKED_I)) 
					IF @BEN_END_DT < @BenActDate
						SET @INSERT_FLAG = 0
					ELSE 
						SET @INSERT_FLAG = 1
			   	END
			  	ELSE 
					SET @INSERT_FLAG = 1
	
			END
		END
		ELSE
			SET @INSERT_FLAG = 1

	IF @INSERT_FLAG = 1
	BEGIN 
		SET @WC_RATE = 0
	     	SELECT @WC_RATE = WKCMPCNT/100000000.00 FROM UPR40700 WHERE WRKRCOMP = @WC_CODE
	
		SET @WC_RATE = ISNULL(@WC_RATE, 0.00) 
		SET @GROSSPAY = 0
	
		SELECT @GROSSPAY = SUM(UPRTRXAM) FROM UPR30300 WHERE EMPLOYID = @EMPLOYID AND PYRLRTYP = 1 AND CHEKDATE BETWEEN @Start_Chk_Dt AND @End_Chk_Dt 
	
		SET @GROSSPAY = ISNULL(@GROSSPAY, 0)
		SET @WC_COST = 0
		SET @WC_COST = @GROSSPAY * @WC_RATE /1.000
		SET @WC_COST = ISNULL(@WC_COST, 0)
		SET @PAYRATE = 0 
		
		DECLARE PAY_MST CURSOR LOCAL KEYSET OPTIMISTIC FOR 
	     	SELECT 	PAYRCORD, 
			PAYRTAMT 
		FROM 	UPR00400 
		WHERE 	EMPLOYID = @EMPLOYID AND 
			PAYRTAMT > 0 AND
			PAYTYPE IN (1, 2, 3)
	
		OPEN PAY_MST 
		FETCH FROM PAY_MST INTO @PAYCODE, @PAYRATE
		WHILE @@FETCH_STATUS = 0 
		BEGIN
	       		SET @PAYRATE = ISNULL(@PAYRATE, 0) 
	       		IF EXISTS(SELECT * FROM IMC_CENSUSREP WHERE USERID = @USERID AND EMPLOYID = @EMPLOYID AND (LEN(PAYCODE) = 0 OR PAYCODE = @PAYCODE))
			BEGIN
				UPDATE 	IMC_CENSUSREP
				SET 	PAYRATE = @PAYRATE, 
					PAYCODE = @PAYCODE 
				WHERE 	USERID = @USERID AND 
					EMPLOYID = @EMPLOYID AND 
					(LEN(PAYCODE) = 0 OR PAYCODE = @PAYCODE)


			END
	       		ELSE
	       		BEGIN
				INSERT INTO IMC_CENSUSREP 
				       (EMPLOYID, 
					DEPTDESC, 
					LASTNAME, 
					FNAMEMI, 
					SOCSCNUM, 
					HIREDATE, 
					GROSSPAY, 
					GENDER, 
					CITY, 
					STATE, 
					LASTDAYWORKED_I, 
					BIRTHDATE, 
					MARITALSTATUS, 
					INACTIVE, 
					EMPLYTYPE, 
					WC_CODE, 
					WC_RATE, 
					WC_COST, 
					JOBDESC, 
					PAYRATE, 
					FLSA, 
					BENCODE, 
					BENRATE, 
					MONTHLY_BENEFIT, 
					DEDNCODE, 
					DEDNRATE, 
					MONTHLY_DEDN, 
					BEN_ACTIVATION_DATE, 
					BEN_TERM_DATE, 
					DEDN_ACTIVATION_DATE, 
					DEDN_TERM_DATE, 
					REPID, 
					USERID, 
					PAYCODE)
				VALUES (@EMPLOYID, 
					@DEPTDESC, 
					@LASTNAME, 
					@FNAMEMI, 
					@SOCSCNUM, 
					@HIREDATE, 
					@GROSSPAY, 
					@GENDER, 
					@CITY, 
					@STATE, 
					@LASTDAYWORKED_I, 
					@BIRTHDATE, 
					@MARITALSTATUS, 
					@INACTIVE, 
					@EMPLYTYPE, 
					@WC_CODE, 
					@WC_RATE,
					@WC_COST, 
					@JOBDESC, 
					@PAYRATE, 
					@FLSASTATUS, 
					'', 
					0, 
					0, 
					'', 
					0, 
					0, 
					'1-jAN-1900', 
					'1-jAN-1900', 
					'1-jAN-1900', 
					'1-jAN-1900', 
					@REPID, 
					@USERID, 
					@PAYCODE ) 

				SET @INSERTED = 1
			END
	
			FETCH NEXT FROM PAY_MST INTO @PAYCODE, @PAYRATE
		END
	
		CLOSE PAY_MST
		DEALLOCATE PAY_MST 
	
		IF @StartBeneCode <> 'BLANK'
		BEGIN
			IF @StartBeneCode <> 'ALL'
			BEGIN 	
		      		DECLARE BENEFITS CURSOR LOCAL KEYSET OPTIMISTIC FOR 
				SELECT 	SUM(UPRTRXAM), 
					PAYROLCD 
				FROM 	UPR30300 
				WHERE	CHEKDATE BETWEEN @Start_Chk_Dt AND @End_Chk_Dt AND 
					PYRLRTYP = 3 AND
					PAYROLCD BETWEEN @StartBeneCode AND @EndBeneCode AND
					EMPLOYID = @EMPLOYID 
				GROUP BY PAYROLCD
			END
			ELSE 
			BEGIN 
				DECLARE BENEFITS CURSOR LOCAL KEYSET OPTIMISTIC FOR 
				SELECT 	SUM(UPRTRXAM), 
					PAYROLCD 
				FROM 	UPR30300 
				WHERE	CHEKDATE BETWEEN @Start_Chk_Dt AND @End_Chk_Dt AND 
					PYRLRTYP = 3 AND 
					EMPLOYID = @EMPLOYID 
				GROUP BY PAYROLCD 
			END
		    
			OPEN BENEFITS
			FETCH FROM BENEFITS INTO @BENEAMNT, @BENECODE
			WHILE @@FETCH_STATUS = 0 
			BEGIN
				SELECT 	@BENEPERC = BNFPRCNT_1 , 
					@BEN_ACTIVATION_DATE = BNFBEGDT, 
					@BEN_TERM_DATE = BNFENDDT 
				FROM 	UPR00600 
				WHERE 	EMPLOYID = @EMPLOYID AND 
					BENEFIT = @BENECODE
			
				SET @BENEPERC = ISNULL(@BENEPERC, 0) 
				IF @BENEPERC = 0
					SELECT @BENEPERC = BNFITAMT_1 FROM UPR00600 WHERE EMPLOYID = @EMPLOYID AND BENEFIT = @BENECODE  
			
				IF EXISTS(SELECT * FROM IMC_CENSUSREP WHERE USERID = @USERID AND EMPLOYID = @EMPLOYID AND (LEN(BENCODE) = 0 OR BENCODE = @BENECODE))
				BEGIN
					UPDATE 	IMC_CENSUSREP 
					SET 	BENCODE = @BENECODE, 
						MONTHLY_BENEFIT = @BENEAMNT, 
						BENRATE = @BENEPERC,
				 		BEN_ACTIVATION_DATE = @BEN_ACTIVATION_DATE, 
						BEN_TERM_DATE = @BEN_TERM_DATE 
				 	WHERE 	EMPLOYID = @EMPLOYID AND 
						USERID = @USERID AND 
						(LEN(BENCODE) = 0 OR 
						BENCODE = @BENECODE)
				END 
				ELSE
				BEGIN
					INSERT INTO IMC_CENSUSREP 
					       (EMPLOYID, 
						DEPTDESC, 
						LASTNAME, 
						FNAMEMI, 
						SOCSCNUM, 
						HIREDATE, 
						GROSSPAY, 
						GENDER, 
						CITY, 
						STATE, 
						LASTDAYWORKED_I, 
						BIRTHDATE, 
						MARITALSTATUS, 
						INACTIVE, 
						EMPLYTYPE, 
						WC_CODE, 
						WC_RATE, 
						WC_COST, 
						JOBDESC, 
						PAYRATE, 
						FLSA, 
						BENCODE, 
						BENRATE, 
						MONTHLY_BENEFIT, 
						DEDNCODE, 
						DEDNRATE, 
						MONTHLY_DEDN, 
						BEN_ACTIVATION_DATE, 
						BEN_TERM_DATE, 
						DEDN_ACTIVATION_DATE, 
						DEDN_TERM_DATE, 
						REPID, 
						USERID, 
						PAYCODE)
					VALUES (@EMPLOYID, 
						@DEPTDESC, 
						@LASTNAME, 
						@FNAMEMI, 
						@SOCSCNUM, 
						@HIREDATE, 
						@GROSSPAY, 
						@GENDER, 
						@CITY, 
						@STATE, 
						@LASTDAYWORKED_I, 
						@BIRTHDATE, 
						@MARITALSTATUS, 
						@INACTIVE, 
						@EMPLYTYPE, 
						@WC_CODE, 
						@WC_RATE, 
						@WC_COST, 
						@JOBDESC, 
						0, 
						@FLSASTATUS, 
						@BENECODE,
						@BENEPERC,
						@BENEAMNT, 
						'', 
						0, 
						0, 
						@BEN_ACTIVATION_DATE, 
						@BEN_TERM_DATE, 
						'1-jAN-1900', 
						'1-jAN-1900', 
						@REPID, 
						@USERID, 
						'')
		
				  	SET @INSERTED = 1
				END
				
				FETCH NEXT FROM BENEFITS INTO @BENEAMNT, @BENECODE
			END
		
			CLOSE BENEFITS 
			DEALLOCATE BENEFITS
		END
	
		IF @StartDednCode <> 'BLANK'
		BEGIN
			IF @StartDednCode <> 'ALL'
			BEGIN
		       		DECLARE DEDUCTIONS CURSOR LOCAL KEYSET OPTIMISTIC FOR 
				SELECT 	SUM(UPRTRXAM), 
					PAYROLCD 
				FROM 	UPR30300 
				WHERE	CHEKDATE BETWEEN @Start_Chk_Dt AND @End_Chk_Dt AND 
					PYRLRTYP = 2 AND
					PAYROLCD BETWEEN @StartDednCode AND @EndDednCode AND
		       			EMPLOYID = @EMPLOYID 
				GROUP BY PAYROLCD
			END
		       	ELSE
		       	BEGIN 
		       		DECLARE DEDUCTIONS CURSOR LOCAL KEYSET OPTIMISTIC FOR 
				SELECT 	SUM(UPRTRXAM), 
					PAYROLCD 
				FROM 	UPR30300 
				WHERE	CHEKDATE BETWEEN @Start_Chk_Dt AND @End_Chk_Dt AND
					PYRLRTYP = 2 AND 
					EMPLOYID = @EMPLOYID 
				GROUP BY PAYROLCD 
		       	END
		       
			OPEN DEDUCTIONS
		       	FETCH FROM DEDUCTIONS INTO @DEDNAMNT, @DEDNCODE
		       	WHILE @@FETCH_STATUS = 0 
		        BEGIN
			 	SELECT 	@DEDNPERC = DEDNPRCT_1, 
					@DEDN_ACTIVATION_DATE = DEDBEGDT, 
					@DEDN_TERM_DATE = DEDENDDT 
				FROM 	UPR00500 
			 	WHERE 	EMPLOYID = @EMPLOYID AND 
					DEDUCTON = @DEDNCODE
		
			 	SET 	@DEDNPERC = ISNULL(@DEDNPERC, 0)
		
			 	IF @DEDNPERC = 0
				BEGIN
			 		SELECT 	@DEDNPERC = DEDCAMNT_1 
					FROM 	UPR00500
					WHERE 	EMPLOYID = @EMPLOYID AND 
					DEDUCTON = @DEDNCODE 	
				END
		
			 	IF EXISTS(SELECT * FROM IMC_CENSUSREP WHERE EMPLOYID = @EMPLOYID AND USERID = @USERID AND (LEN(DEDNCODE) = 0 OR DEDNCODE = @DEDNCODE))
			  	BEGIN
				   	UPDATE 	IMC_CENSUSREP 
					SET 	DEDNCODE = @DEDNCODE, 
						MONTHLY_DEDN = @DEDNAMNT, 
						DEDNRATE = @DEDNPERC, 
				   		DEDN_ACTIVATION_DATE = @DEDN_ACTIVATION_DATE, 
						DEDN_TERM_DATE = @DEDN_TERM_DATE 
				   	WHERE 	EMPLOYID = @EMPLOYID AND 
						USERID = @USERID AND 
						(LEN(DEDNCODE) = 0 OR 
						DEDNCODE = @DEDNCODE)
				END
				ELSE
				BEGIN
				   	INSERT INTO IMC_CENSUSREP 
					       (EMPLOYID, 
						DEPTDESC, 
						LASTNAME, 
						FNAMEMI, 
						SOCSCNUM, 
						HIREDATE, 
						GROSSPAY, 
						GENDER, 
						CITY, 
				   		STATE, 
						LASTDAYWORKED_I, 
						BIRTHDATE, 
						MARITALSTATUS, 
						INACTIVE, 
						EMPLYTYPE, 
						WC_CODE, 
						WC_RATE, 
						WC_COST, 
						JOBDESC, 
				   		PAYRATE, 
						FLSA, 
						BENCODE, 
						BENRATE, 
						MONTHLY_BENEFIT, 
						DEDNCODE, 
						DEDNRATE, 
						MONTHLY_DEDN, 
						BEN_ACTIVATION_DATE, 
				   		BEN_TERM_DATE, 
						DEDN_ACTIVATION_DATE, 
						DEDN_TERM_DATE, 
						REPID, 
						USERID, 
						PAYCODE)
				   	VALUES (@EMPLOYID, 
						@DEPTDESC, 
						@LASTNAME, 
						@FNAMEMI, 
						@SOCSCNUM, 
						@HIREDATE, 
						@GROSSPAY, 
						@GENDER, 
						@CITY, 
				   		@STATE, 
						@LASTDAYWORKED_I, 
						@BIRTHDATE, 
						@MARITALSTATUS, 
						@INACTIVE, 
						@EMPLYTYPE, 
						@WC_CODE, 
						@WC_RATE, 
						@WC_COST, 
						@JOBDESC, 
				   		0, 
						@FLSASTATUS, 
						'',
						0, 
						0, 
						@DEDNCODE, 
						@DEDNPERC, 
						@DEDNAMNT, 
						'1-jAN-1900', 
						'1-jAN-1900', 
						@DEDN_ACTIVATION_DATE, 
				   		@DEDN_TERM_DATE, 
						@REPID, 
						@USERID, 
						'')
	
					SET @INSERTED = 1
				END
		
				FETCH NEXT FROM DEDUCTIONS INTO @DEDNAMNT, @DEDNCODE
			END
		
			CLOSE DEDUCTIONS 
			DEALLOCATE DEDUCTIONS
		END
	
		IF @INSERTED = 0 
		BEGIN
			  INSERT INTO IMC_CENSUSREP (EMPLOYID, DEPTDESC, LASTNAME, FNAMEMI, SOCSCNUM, HIREDATE, GROSSPAY, GENDER, CITY, 
			  STATE, LASTDAYWORKED_I, BIRTHDATE, MARITALSTATUS, INACTIVE, EMPLYTYPE, WC_CODE, WC_RATE, WC_COST, JOBDESC, 
			  PAYRATE, FLSA, BENCODE, BENRATE, MONTHLY_BENEFIT, DEDNCODE, DEDNRATE, MONTHLY_DEDN, BEN_ACTIVATION_DATE, 
			  BEN_TERM_DATE, DEDN_ACTIVATION_DATE, DEDN_TERM_DATE, REPID, USERID, PAYCODE )
			  VALUES (@EMPLOYID, @DEPTDESC, @LASTNAME, @FNAMEMI, @SOCSCNUM, @HIREDATE, @GROSSPAY, @GENDER, @CITY, 
			  @STATE, @LASTDAYWORKED_I, @BIRTHDATE, @MARITALSTATUS, @INACTIVE, @EMPLYTYPE, @WC_CODE, @WC_RATE, @WC_COST, @JOBDESC, 
			  0, @FLSASTATUS, '', 0, 0, '', 0, 0, '1-jAN-1900', '1-jAN-1900', '1-jAN-1900', '1-jAN-1900', @REPID, @USERID, 
			  '' ) 	  
		END
		
		SET @INSERTED = 0 	     
     	END

	FETCH NEXT FROM EMPDATA INTO @LASTNAME ,@FNAMEMI ,@SOCSCNUM , @EMPLOYID, @GENDER, @CITY, @STATE, @HIREDATE, 
     	@LASTDAYWORKED_I, @BIRTHDATE, @MARITALSTATUS, @INACTIVE, @EMPLYTYPE, @WC_CODE, @JOBDESC, @DEPTDESC, @FLSASTATUS, 
   	@DEPRTMNT, @BEN_WT_PERIOD    	
END

UPDATE	IMC_CENSUSREP
SET	@SETROWNUMBER = RowNumber = @SETROWNUMBER + 1

UPDATE	IMC_CENSUSREP
SET	IMC_CENSUSREP.PayrolCD = PO.PayrolCD,
	IMC_CENSUSREP.UprTrxAm = PO.UprTrxAm
FROM   (SELECT 	VPO.EmployId, 
		PayrolCD,
		RowNumber,
		SUM(UprTrxAm) AS UprTrxAm 
	FROM 	DYNAMICS..View_Payroll_Overtime  VPO
		INNER JOIN (SELECT EMPLOYID, MIN(RowNumber) AS RowNumber FROM IMC_CENSUSREP WHERE USERID = @USERID GROUP BY EMPLOYID) EM ON VPO.EmployId = EM.EmployId
	WHERE 	VPO.Chekdate BETWEEN @Start_Chk_Dt AND @End_Chk_Dt AND 
		VPO.DBName = DB_NAME() 
	GROUP BY VPO.EmployId, VPO.PayrolCD, RowNumber) PO
WHERE	IMC_CENSUSREP.EmployId = PO.EmployId AND
	IMC_CENSUSREP.RowNumber = PO.RowNumber AND
	IMC_CENSUSREP.USERID = @USERID

SET @SQLSTR = 'SELECT RowNumber, IMC_CENSUSREP.EMPLOYID, DEPRTMNT, DEPTDESC, LASTNAME, FNAMEMI, SOCSCNUM, '
SET @SQLSTR = @SQLSTR + 'CASE CONVERT(NVARCHAR,HIREDATE,101) WHEN ' + CHAR(39) + '01/01/1900' + CHAR(39) + ' THEN ' + CHAR(39) + '' + CHAR(39) + ' ELSE CONVERT(NVARCHAR,HIREDATE,101) END HIREDATE ,'
SET @SQLSTR = @SQLSTR + 'CASE GENDER WHEN 1 THEN ' + CHAR(39) + 'Male' + CHAR(39) + ' WHEN 2 THEN ' + CHAR(39) + 'Female' + CHAR(39) + '  WHEN 3 THEN ' + CHAR(39) + 'N/A' + CHAR(39) + ' END GENDER, '
SET @SQLSTR = @SQLSTR + 'GROSSPAY, '
SET @SQLSTR = @SQLSTR + 'CITY, STATE, '
SET @SQLSTR = @SQLSTR + 'CASE CONVERT(NVARCHAR,LASTDAYWORKED_I,101) WHEN ' + CHAR(39) + '01/01/1900' + CHAR(39) + ' THEN ' + CHAR(39) + '' + CHAR(39) + ' ELSE CONVERT(NVARCHAR,LASTDAYWORKED_I,101) END LASTDAYWORKED_I, '
SET @SQLSTR = @SQLSTR + 'CASE CONVERT(NVARCHAR,BIRTHDATE,101) WHEN ' + CHAR(39) + '01/01/1900' + CHAR(39) + ' THEN ' + CHAR(39) + '' + CHAR(39) + ' ELSE CONVERT(NVARCHAR,BIRTHDATE,101) END BIRTHDATE, '
SET @SQLSTR = @SQLSTR + 'CASE MARITALSTATUS WHEN 1 THEN ' + CHAR(39) + 'Married' + CHAR(39) + ' WHEN 2 THEN ' + CHAR(39) + 'Single' + CHAR(39) + '  WHEN 3 THEN ' + CHAR(39) + 'N/A' + CHAR(39) + ' END MARITALSTATUS, '
SET @SQLSTR = @SQLSTR + 'CASE INACTIVE WHEN 1 THEN ' + CHAR(39) + 'INACTIVE' + CHAR(39) + '  WHEN 0 THEN ' + CHAR(39) + 'ACTIVE' + CHAR(39) + ' END INACTIVE, '
SET @SQLSTR = @SQLSTR + 'CASE EMPLYTYPE WHEN 1 THEN ' + CHAR(39) + 'Full Time Regular' + CHAR(39) + '  WHEN 2 THEN ' + CHAR(39) + 'Full Time Temp' + CHAR(39) + '  WHEN 3 THEN ' + CHAR(39) + 'Part Time Regular' + CHAR(39) + '  WHEN 4 THEN ' + CHAR(39) + 'Part Time Temp' + CHAR(39)+ '  WHEN 5 THEN ' + CHAR(39) + 'Intern' + CHAR(39) + ' END EMPLYTYPE, '
SET @SQLSTR = @SQLSTR + 'WC_CODE, WC_RATE, WC_COST, JOBDESC, PAYRATE, FLSA, BENCODE, BENRATE, '
SET @SQLSTR = @SQLSTR + 'MONTHLY_BENEFIT, DEDNCODE, DEDNRATE, MONTHLY_DEDN, '
SET @SQLSTR = @SQLSTR + 'CASE CONVERT(NVARCHAR,BEN_ACTIVATION_DATE,101) WHEN ' + CHAR(39) + '01/01/1900' + CHAR(39) + ' THEN ' + CHAR(39) + '' + CHAR(39) + ' ELSE CONVERT(NVARCHAR,BEN_ACTIVATION_DATE,101) END BEN_ACTIVATION_DATE, '
SET @SQLSTR = @SQLSTR + 'CASE CONVERT(NVARCHAR,BEN_TERM_DATE,101) WHEN ' + CHAR(39) + '01/01/1900' + CHAR(39) + ' THEN ' + CHAR(39) + '' + CHAR(39) + ' ELSE CONVERT(NVARCHAR,BEN_TERM_DATE,101) END BEN_TERM_DATE, '
SET @SQLSTR = @SQLSTR + 'CASE CONVERT(NVARCHAR,DEDN_ACTIVATION_DATE,101) WHEN ' + CHAR(39) + '01/01/1900' + CHAR(39) + ' THEN ' + CHAR(39) + '' + CHAR(39) + ' ELSE CONVERT(NVARCHAR,DEDN_ACTIVATION_DATE,101) END DEDN_ACTIVATION_DATE, '
SET @SQLSTR = @SQLSTR + 'CASE CONVERT(NVARCHAR,DEDN_TERM_DATE,101) WHEN ' + CHAR(39) + '01/01/1900' + CHAR(39) + ' THEN ' + CHAR(39) + '' + CHAR(39) + ' ELSE CONVERT(NVARCHAR,DEDN_TERM_DATE,101) END DEDN_TERM_DATE,'
SET @SQLSTR = @SQLSTR + ' REPID, USERID, PayrolCD, UprTrxAm, ' + CHAR(39) + DB_NAME() + CHAR(39) + ' AS DBName FROM IMC_CENSUSREP'
SET @SQLSTR = @SQLSTR + ' WHERE USERID = ' + CHAR(39) + RTRIM(@USERID) + CHAR(39)
SET @SQLSTR = @SQLSTR + ' ORDER BY '
SET @SQLSTR = @SQLSTR + CASE SUBSTRING(@SortString,1,1) 
			  WHEN 1 THEN 'LASTNAME'
			  WHEN 2 THEN 'CITY, STATE' 
			  WHEN 3 THEN 'DEPRTMNT'
			  WHEN 4 THEN 'FNAMEMI' END
	       + ', '   + CASE SUBSTRING(@SortString,2,1) 
			  WHEN 1 THEN 'LASTNAME'
			  WHEN 2 THEN 'CITY, STATE' 
			  WHEN 3 THEN 'DEPRTMNT' 
			  WHEN 4 THEN 'FNAMEMI' END
               + ', '   + CASE SUBSTRING(@SortString,3,1) 
			  WHEN 1 THEN 'LASTNAME'
			  WHEN 2 THEN 'CITY, STATE' 
			  WHEN 3 THEN 'DEPRTMNT'
			  WHEN 4 THEN 'FNAMEMI' END
PRINT @SQLSTR 
EXECUTE (@SQLSTR)
END

GO
